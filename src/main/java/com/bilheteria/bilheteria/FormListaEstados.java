package com.bilheteria.bilheteria;

import com.bilheteria.bilheteria.classes.Estado;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raul_
 */

public class FormListaEstados extends javax.swing.JFrame {

    public ArrayList<Estado> linhas = null;

    // Construtor da classe
    public FormListaEstados() {

        // Inicializa os componentes da interface gráfica
        initComponents();

        // Carrega os estados utilizando o método carregarEstados da classe Estado
        this.linhas = Estado.carregarEstados();

        // Chama o método para personalizar os componentes
        customizarComponentes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        OnclickEditar = new javax.swing.JButton();
        OnclickDeletar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Lista de Estados");

        jButton1.setText("Novo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OnclickNovo(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Itens cadastrados"));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Id", "Estado", "Sigla"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
        );

        OnclickEditar.setText("Editar");
        OnclickEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OnclickEditar(evt);
            }
        });

        OnclickDeletar.setText("Deletar");
        OnclickDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OnclickDeletar(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 192, Short.MAX_VALUE)
                        .addComponent(OnclickDeletar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(OnclickEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(OnclickEditar)
                    .addComponent(OnclickDeletar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Método executado ao clicar no botão "Novo"
    private void OnclickNovo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OnclickNovo
        var form = new FormGerenciarEstados(); // Cria um novo formulário para gerenciar estados
        form.setDefaultCloseOperation(DISPOSE_ON_CLOSE); // Define a ação de fechamento do formulário
        form.setVisible(true); // Torna o formulário visível
        
        this.dispose();
    }//GEN-LAST:event_OnclickNovo

    private void OnclickEditar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OnclickEditar
        
         int linhaSelecionada = jTable1.getSelectedRow();
        if (linhaSelecionada == -1) {
            JOptionPane.showMessageDialog(null, "Selecione uma linha");
            return;
        }

        // Obtendo os valores da linha selecionada
         int id = (int) jTable1.getValueAt(linhaSelecionada, 0);
        String nome = (String) jTable1.getValueAt(linhaSelecionada, 1);
        String sigla = (String) jTable1.getValueAt(linhaSelecionada, 2);

       // System.out.println("id: " + id + " nome: " + nome + " sigla: " + sigla);
       
        FormEditarEstados form = new FormEditarEstados(id, nome, sigla);
        form.setVisible(true);
        dispose();
        
    }//GEN-LAST:event_OnclickEditar

    private void OnclickDeletar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OnclickDeletar
        // TODO add your handling code here:
        
          int linhaSelecionada = jTable1.getSelectedRow();
        if (linhaSelecionada == -1) {
            JOptionPane.showMessageDialog(null, "Selecione uma linha");
            return;
        }

        // Obtendo os valores da linha selecionada
        int id = (int) jTable1.getValueAt(linhaSelecionada, 0);
        String nome = (String) jTable1.getValueAt(linhaSelecionada, 1);
        String sigla = (String) jTable1.getValueAt(linhaSelecionada, 2);
         
        FormDeletarEstados form = new FormDeletarEstados(id, nome, sigla);
        form.setVisible(true);
        dispose();
         
         
    }//GEN-LAST:event_OnclickDeletar

    // Método para personalizar os componentes
    private void customizarComponentes() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel(); // Obtém o modelo da tabela
        model.setRowCount(0); // Limpa a tabela

        // Adiciona os dados dos estados no modelo da tabela
        for (Estado estado : linhas) {
            model.addRow(new Object[]{estado.id, estado.nome, estado.sigla}); // Adiciona uma linha para cada estado
        }
    }

    void recarregarEstados() {
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel(); // Obtém o modelo da tabela
        model.setRowCount(0); // Limpa a tabela

        // Recarrega os estados utilizando o método carregarEstados da classe Estado
        this.linhas = Estado.carregarEstados();

        // Adiciona os dados dos estados recarregados no modelo da tabela
        for (Estado estado : linhas) {
            model.addRow(new Object[]{estado.id, estado.nome, estado.sigla}); // Adiciona uma linha para cada estado
        }
    }

    /**
     * @param args the command line arguments
     */
    // Método principal para iniciar a aplicação
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormListaEstados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormListaEstados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormListaEstados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormListaEstados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormListaEstados().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton OnclickDeletar;
    private javax.swing.JButton OnclickEditar;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
